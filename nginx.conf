# Define o servidor upstream (nossa aplicação Flask/Gunicorn)
upstream flask_app {
    # 'web' é o nome do serviço definido no docker-compose.yml
    # '5000' é a porta exposta pelo serviço 'web'
    server web:5000;
}

server {
    listen 80; # Escuta na porta 80 (HTTP)
    server_name _; # Responde a qualquer nome de host (ou coloque seu domínio)

    # Define um tamanho máximo maior para o corpo da requisição (arquivos de upload)
    # Ajuste conforme o MAX_FILE_SIZE_MB do seu app + uma margem
    client_max_body_size 25M; # Ex: 25 Megabytes

    location / {
        # Passa a requisição para o upstream (Gunicorn)
        proxy_pass http://flask_app;

        # Define cabeçalhos importantes para o proxy reverso
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Ajusta timeouts se necessário (ex: para geração de PDF longa)
        proxy_connect_timeout       600;
        proxy_send_timeout          600;
        proxy_read_timeout          600;
        send_timeout                600;
    }

    # Opcional: Se você tivesse arquivos estáticos (CSS, JS, Imagens)
    # location /static {
    #    alias /usr/share/nginx/html/static; # Caminho DENTRO do contêiner Nginx
    #    expires 1d; # Cache de 1 dia
    # }
}